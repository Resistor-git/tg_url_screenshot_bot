name: url screenshot bot workflow

on:
  push:
    branches:
      - feature/selenium_screenshot

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
      -
        name: Check code formatting with black
        uses: psf/black@stable

  build_and_push_to_docker_hub:
    name: Push docker image to docker hub
    runs-on: ubuntu-latest
    needs:
      - linter
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tg_url_screenshot_bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - linter
      - build_and_push_to_docker_hub
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
      -
        name: Copy docker-compose.production.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
          source: "docker-compose-production.yaml"
          target: "tg_url_screenshot_bot"
      -
        name: Run docker on remote server using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
          script: |
            cd tg_url_screenshot_bot
            sudo docker compose -f docker-compose-production.yaml pull
            sudo docker compose -f docker-compose-production.yaml down
            sudo docker compose -f docker-compose-production.yaml up -d
            sudo docker system prune -f